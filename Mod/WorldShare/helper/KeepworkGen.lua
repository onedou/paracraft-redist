--[[
Title: keepworkGen
Author(s): big
Date: 2017.4.24
Desc: generate KeepWork documentation 
-------------------------------------------------------
NPL.load("(gl)Mod/WorldShare/helper/KeepworkGen.lua")
local KeepworkGen = commonlib.gettable("Mod.WorldShare.helper.KeepworkGen")
-------------------------------------------------------
]]

local KeepworkGen = commonlib.gettable("Mod.WorldShare.helper.KeepworkGen");

--@param output: array of strings
--@param content: default to ""
--@return autogen_code_index
function KeepworkGen:InjectContent(output, content)
    local autogen_code_index;
    output[#output+1]  = "<!-- BEGIN_AUTOGEN: do NOT edit in this block -->\r\n";
    output[#output+1]  = content or "";
    autogen_code_index = #output;
    output[#output+1]  = "<!-- END_AUTOGEN-->\r\n";

    return autogen_code_index;
end

function KeepworkGen:GetContent(content)
    local from_code, from_code_end = content:find("<!%-%-%s*BEGIN_AUTOGEN: do NOT edit in this block %-%->");

    if(from_code) then
        local to_code, to_code_end = content:find("<!%-%-%s*END_AUTOGEN[^\r\n]*[\r\n]+", from_code_end);
        if(to_code) then
            return content:sub(from_code_end+1, to_code-1);
        end
    end
end

-- return array of text blocks and the index at which to insert autogenerated code. 
-- @return output, autogen_code_index
function KeepworkGen:GetAutoGenContent(content)
    local output = {};
    local autogen_code_index;
    
    local from_code, from_code_end = content:find("<!%-%-%s*BEGIN_AUTOGEN: do NOT edit in this block %-%->");

    if(from_code) then
        local to_code, to_code_end = content:find("<!%-%-%s*END_AUTOGEN[^\r\n]*[\r\n]+", from_code_end);
        if(to_code) then
            if(from_code>1) then
                output[#output+1] = content:sub(1, from_code-1);
            end
            autogen_code_index = self:InjectContent(output);
            output[#output+1] = content:sub(to_code_end+1, -1);
        end
    end

    if(not autogen_code_index) then
        autogen_code_index = self:InjectContent(output);
        output[#output+1] = content;
    end

    return output, autogen_code_index;
end

function KeepworkGen:SetAutoGenContent(content, text)
    if(not text and type(text) ~= "string") then
        return;
    end

    local output, autogen_code_index = self:GetAutoGenContent(content);
    if(output) then
        output[autogen_code_index] = text;
        return table.concat(output, "");
    end
end

function KeepworkGen:setCommand(command, params)
    local content = [[
```@{{command}}
{{params}}
```
]];

    if(command) then
        content = content:gsub("{{command}}" , command);
    else
        content = content:gsub("{{command}}" , "");
    end
    
    if(params)then
        params = NPL.ToJson(params, true);
    else
        params = "";
    end
    
    content = content:gsub("{{params}}" , params);

    return content;
end

function KeepworkGen:getCommand(command, content)
    content = content:gsub("```@" .. command , "");
    content = content:gsub("```" , "");

    local params = {};
    NPL.FromJson(content, params);

    return params;
end

KeepworkGen.readmeDefault = [[
```@Paracraft
styleID: 3

```
```@BigFile
styleID: 0
bigFile:
    src: >-
    https://api.keepwork.com/storage/v0/siteFiles/205/raw
    ext: mp4
    filename: 小动画片头.mp4
    size: 2264142
```
```@Text
styleID: 1
title:
    name: Introduction of works
    link: ''
    target: _self
paragraph:
    data: >-
    Designers of any classification need to have a certain fine arts foundation,
    and even have certain hand drawing ability. When we use the computer to
    design graphics, we are also imperceptibly using the art knowledge and
    aesthetics that we store in the brain. Even the advanced artificial
    intelligence can not replace the designer's aesthetic and art knowledge. In
    the end, software is only a tool. If you want to improve your graphic sense
    of aesthetics and design, you need to fill in the basic courses of art. In
    the Internet visual design, the proportion of hand drawn in Internet design
    is also increasing. 

```
```@Text
styleID: 1
title:
    name: major function
    link: ''
    target: _self
paragraph:
    data: >-
    - learn the basic principles of film and animation.

    - support 3D modeling, bone binding.

    - Supporting camera editing and completing a 3D virtual reality personal
    work.

    - Support the establishment of Wiki website for personal works (accessible
    to Keepwork.com)

    - support the release of the work to the mainstream video site.

```
```@Text
styleID: 1
title:
    name: Related help
    link: ''
    target: _self
paragraph:
    data: |-
    Official website address:    www.paracraft.cn
    Software download:   > point I look at <
    Video tutorial:  > point I see <

```
```@Comment
styleID: 0
comment:
    switch:
    desc: card.switchComment
    value: true

```
]];

KeepworkGen.readmeEnglish = [[

]]

KeepworkGen.paracraftContainer = [[
```@template/js/default
{"class":"paracraft"}
```
]];